# Android generated
bin
gen
libs
obj
lint.xml

# IntelliJ IDEA
.idea
*.iml
*.ipr
*.iws
classes/entitled 
gen-external-apklibs

# Eclipse
.project
.classpath
.settings
.checkstyle
.cproject

# Gradle
.gradle
build
buildout
out

# Maven
target
release.symp
pom.xml.*

# Ant
ant.symp
local.symp
proguard.cfg
proguard-project.txt

# Bazel
bazel-bin
bazel-genfiles
bazel-out
bazel-testlogs

# Other
.DS_Store
cmake-build-debug
dist
jacoco.exec
tmp

# External native builds
.externalNativeBuild

# VP9 extension
extensions/vp9/src/main/jni/lib
extensions/vp9/src/main/jni/lib_android_configs
extensions/vp9/src/main/jni/lib

# AV1 extension
extensions/av1/src/main/jni/cpu_features
extensions/av1/src/main/jni/libgav1

# Opus extension
extensions/opus/src/main/jni/lib

# FLAC extension
extensions/flac/src/main/jni/flac

# FFmpeg extension
extensions/ffmpeg/src/main/jni/ffmpeg

# Cronet extension
extensions/cronet/jniLibs/*
!extensions/cronet/jniLibs/README.md
extensions/cronet/libs/*
!extensions/cronet/libs/README.md

# MIDI extension
extensions/midi/lib
# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit

APP_NAME="Gradle"
APP_BASE_NAME=${0##*/}

